//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer.SR_ServiceLayerWcf {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeopleModel", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class PeopleModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SR_ServiceLayerWcf.IServiceLayerWcfServiceDefinition")]
    public interface IServiceLayerWcfServiceDefinition {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLayerWcfServiceDefinition/QueryAll", ReplyAction="http://tempuri.org/IServiceLayerWcfServiceDefinition/QueryAllResponse")]
        System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel> QueryAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceLayerWcfServiceDefinition/QueryAll", ReplyAction="http://tempuri.org/IServiceLayerWcfServiceDefinition/QueryAllResponse")]
        System.IAsyncResult BeginQueryAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel> EndQueryAll(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLayerWcfServiceDefinitionChannel : PresentationLayer.SR_ServiceLayerWcf.IServiceLayerWcfServiceDefinition, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLayerWcfServiceDefinitionClient : System.ServiceModel.ClientBase<PresentationLayer.SR_ServiceLayerWcf.IServiceLayerWcfServiceDefinition>, PresentationLayer.SR_ServiceLayerWcf.IServiceLayerWcfServiceDefinition {
        
        private BeginOperationDelegate onBeginQueryAllDelegate;
        
        private EndOperationDelegate onEndQueryAllDelegate;
        
        private System.Threading.SendOrPostCallback onQueryAllCompletedDelegate;
        
        public ServiceLayerWcfServiceDefinitionClient() {
        }
        
        public ServiceLayerWcfServiceDefinitionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLayerWcfServiceDefinitionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLayerWcfServiceDefinitionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLayerWcfServiceDefinitionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<QueryAllCompletedEventArgs> QueryAllCompleted;
        
        public System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel> QueryAll() {
            return base.Channel.QueryAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel> EndQueryAll(System.IAsyncResult result) {
            return base.Channel.EndQueryAll(result);
        }
        
        private System.IAsyncResult OnBeginQueryAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryAll(callback, asyncState);
        }
        
        private object[] OnEndQueryAll(System.IAsyncResult result) {
            System.Collections.Generic.List<PresentationLayer.SR_ServiceLayerWcf.PeopleModel> retVal = this.EndQueryAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryAllCompleted(object state) {
            if ((this.QueryAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryAllCompleted(this, new QueryAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryAllAsync() {
            this.QueryAllAsync(null);
        }
        
        public void QueryAllAsync(object userState) {
            if ((this.onBeginQueryAllDelegate == null)) {
                this.onBeginQueryAllDelegate = new BeginOperationDelegate(this.OnBeginQueryAll);
            }
            if ((this.onEndQueryAllDelegate == null)) {
                this.onEndQueryAllDelegate = new EndOperationDelegate(this.OnEndQueryAll);
            }
            if ((this.onQueryAllCompletedDelegate == null)) {
                this.onQueryAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryAllCompleted);
            }
            base.InvokeAsync(this.onBeginQueryAllDelegate, null, this.onEndQueryAllDelegate, this.onQueryAllCompletedDelegate, userState);
        }
    }
}
